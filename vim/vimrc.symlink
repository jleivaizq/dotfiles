" ---------------------------------------------------------------------------
"  Shorcuts
" ---------------------------------------------------------------------------

" ,w -> Strip whitespaces
map ,w :call StripWhitespace ()<CR>

" ,ss -> Spellcheck in Spanish
map ,ss :setlocal spell spelllang=es_ES<CR>

" ,se -> Spellcheck in English
map ,se :setlocal spell spelllang=en_us<CR>

" ----------------------------------------------------------------------------
" Plugins
" ----------------------------------------------------------------------------

" Pathogen (plugins under ~/.vim/bundle)
call pathogen#infect()
call pathogen#helptags()

" Super-Tab
au FileType python set omnifunc=pythoncomplete#Complete
let g:SuperTabDefaultCompletionType = "context"


" ---------------------------------------------------------------------------
"  General configuration
" ---------------------------------------------------------------------------

" General
set nocompatible                " vi != vim
let mapleader=","               " Lead with ,

" Format settings
set nowrap                      " No wrap lines
set tabstop=4                   " A tab is four spaces
set softtabstop=4               " Also softtab
set expandtab                   " Expands tab
set nosmarttab                  " Fuck tabs
set backspace=indent,eol,start  " Allow backspacing over everything
set scrolloff=4                 " Keep 4 lines off the edges of the screen
set autoindent                  " Always set autoindenting on
set smartindent                 " Smart indent
set copyindent                  " Copy the previous indentation
set number                      " Always show line number
set shiftwidth=4                " Four spaces on indenting
set shiftround                  " Use multiple of swidth when indenting with <>
set showmatch                   " Set show matching parenthesis
set ignorecase                  " Ignore case when searching
set smartcase                   " Ignore case if pattern is all lowercase
set smarttab                    " Tabs on the start of a line with shiftwidth
set hlsearch                    " Highlight search terms
set incsearch                   " Show search matches as you type
set title                       " Change the terminal's title
set visualbell                  " Don't beep
set noerrorbells                " Don't beep
set showmode                    " Show actual status
set showcmd                     " Show commands
set ruler                       " Show position info
set laststatus=2                " Show the status line always
set ch=1                        " Command line height
set backspace=2                 " Backspacing over everything in insert mode
set whichwrap+=<,>,h,l,[,]      " Backspace and cursor keys wrap to
set shortmess=filtIoOA          " Shorten messages
set report=0                    " Tell us about changes
set nostartofline               " Don't jump to the start of line when scrolling

" File settings
set modeline                    " Activate the modeline
set modelines=5                 " To the first and last 5 lines
set hidden                      " Open files without saving
set nobackup                    " No backup files

" History settings
set viminfo+=n~/.viminfo        " Filename of the history file
set history=1000                " Remember more commands and search history
set undolevels=1000             " Use many muchos levels of undo

" Crap settings
set formatoptions+=cqron1       " Set auto-crap of lines
set textwidth=100               " Set 80 chars to the width
set fileformats=unix,mac,dos    " Autodetect end of line format

" Ignore extensions
if has("wildmenu")
    set wildmenu
    set wildmode=list:longest,full
    set wildchar=<TAB>
    set wildignore=*.swp,*.bak,*.pyc,*.pyo,*.class,*.o
endif

" Different settings to static web stuff
au FileType html,htmldjango,javascript,css setlocal sw=2 ts=2 sts=2

" Indent ON
filetype indent plugin on

" Syntax highlighting and color scheme (solarized)
syntax enable
set t_Co=256
let g:solarized_termcolors=256
set background=dark
colorscheme solarized

" Remove all trailing spaces
autocmd BufWritePre * :%s/\s\+$//e

" ---------------------------------------------------------------------------
"  Functions
" ---------------------------------------------------------------------------

" Highlight whitespaces with a red background
"set list
"set listchars=tab:>.,extends:#,nbsp:.
"if has("syntax") || has("gui_running")
"    highlight WhitespaceEOL ctermbg=red guibg=red
"    match WhitespaceEOL /\s\+$/
"endif

" Go to the last line visited when reopen a file
if has("autocmd")
    autocmd BufReadPost *
        \ if line("'\"") > 0 && line("'\"") <= line("$") |
        \   execute "normal g'\"" |
        \ endif
endif

" Strip withespaces with ,s
function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction


"This highlights the background in a subtle red for text that goes over the 80
"column limit
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%101v.\+/

set mouse=a

" ---------------------------------------------------------------------------
" Nerdtree 
" ---------------------------------------------------------------------------
nnoremap <F1> :NERDTreeToggle<cr>

" ---------------------------------------------------------------------------
" vim-jedi 
" ---------------------------------------------------------------------------

" Do use splits not buffers
let g:jedi#use_splits_not_buffers = "left"

" Disable completion after .
"let g:jedi#popup_on_dot = 0
"let g:jedi#completions_enabled = 0

let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = "<leader>d"
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "<leader>n"
let g:jedi#completions_command = "<C-Space>"
let g:jedi#rename_command = "<leader>r"
let g:jedi#show_call_signatures = "1"

" ---------------------------------------------------------------------------
" vim-airline 
" ---------------------------------------------------------------------------
let g:airline_left_sep = 'â®€'
let g:airline_right_sep = ''
let g:airline#extensions#branch#enabled = 1

" ---------------------------------------------------------------------------
" syntastic
" ---------------------------------------------------------------------------
let g:syntastic_warning_symbol = 'WW'
let g:syntastic_error_symbol = 'EE'

let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': ['python', 'javascript'],
                           \ 'passive_filetypes': ['html'] }
 
" python syntax checking
let g:syntastic_python_checkers = ['pep8', 'pylint', 'python']

" ---------------------------------------------------------------------------
" Bbye
" ---------------------------------------------------------------------------
:nnoremap <Leader>q :Bdelete<CR>

" ---------------------------------------------------------------------------
" Coffeescript
" ---------------------------------------------------------------------------
autocmd BufNewFile,BufReadPost *.coffee setl shiftwidth=2 expandtab
